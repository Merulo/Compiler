#SecondIR:
#Block_0
	CONST n 100
#jump to Block_3
#end of Block_0
#Block_3
	COPY i n
	COPY i_forControl i
	INC i_forControl 
	CONST variable_0 2
	SUB i_forControl variable_0
	JZERO i_forControl 
#ifTrue Block_14
#ifFalse Block_1
#end of Block_3
#Block_1
	CONST sieve(i) 1
#jump to Block_4
#end of Block_1
#Block_4
	DEC i 
	DEC i_forControl 
	JZERO i_forControl 
#ifTrue Block_14
#ifFalse Block_1
#end of Block_4
#Block_14
	CONST i 2
	COPY i_forControl n
	INC i_forControl 
	SUB i_forControl i
	JZERO i_forControl 
#ifTrue Block_16
#ifFalse Block_7
#end of Block_14
#Block_7
	CONST variable_1 0
	JNE sieve(i) variable_1
#ifTrue Block_9
#ifFalse Block_15
#end of Block_7
#Block_9
	COPY j i
	ADD j i
#jump to Block_10
#end of Block_9
#Block_10
	JLE j n
#ifTrue Block_12
#ifFalse Block_11
#end of Block_10
#Block_12
	CONST sieve(j) 0
	ADD j i
#jump to Block_10
#end of Block_12
#Block_11
	WRITE i 
#jump to Block_15
#end of Block_11
#Block_15
	INC i 
	DEC i_forControl 
	JZERO i_forControl 
#ifTrue Block_16
#ifFalse Block_7
#end of Block_15
#Block_16
	HALT  
#end of Block_16
